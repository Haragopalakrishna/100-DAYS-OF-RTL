`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 04.11.2023 13:15:10
// Design Name: 
// Module Name: ALU
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ALU(
    input [7:0] A,
    input [7:0] B,
    input [3:0] sel,
    output carry,
    output [7:0] out
    );
    reg[7:0] result;
    wire[8:0] temp;
    assign out = result;
    assign temp = {1'b0,A} + {1'b0,B};
    assign carry = temp[8];
    always@(*)
    begin 
    case(sel)
    4'b0000: result = A+B;
    4'b0001: result = A-B;
    4'b0010: result = A*B;
    4'b0011: result = A/B;
    4'b0100: result = A&B;
    4'b0101: result = ~(A&B);
    4'b0110: result = A|B;
    4'b0111: result = ~(A|B);
    4'b1000: result = A^B;
    4'b1001: result = ~(A^B);
    4'b1010: result = A>>B;
    4'b1011: result = A<<B;
    4'b1100: result = (A>B)?8'd1:8'd0;
    4'b1101: result = (A==B)?8'd1:8'd0;
    4'b1110: result = {A[6:0],A[7]};
    4'b1111: result = {A[0],A[7:1]};
    default: result=A+B;
    endcase
    end
    
endmodule
-